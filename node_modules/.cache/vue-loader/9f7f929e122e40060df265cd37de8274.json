{"remainingRequest":"/Users/user/Documents/new/marno-game/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/user/Documents/new/marno-game/src/components/ui/progress/index.vue?vue&type=style&index=0&id=0a129d6d&scoped=true&lang=scss&","dependencies":[{"path":"/Users/user/Documents/new/marno-game/src/components/ui/progress/index.vue","mtime":1635329579102},{"path":"/Users/user/Documents/new/marno-game/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/new/marno-game/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/user/Documents/new/marno-game/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/user/Documents/new/marno-game/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/new/marno-game/node_modules/style-resources-loader/lib/index.js","mtime":499162500000},{"path":"/Users/user/Documents/new/marno-game/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/user/Documents/new/marno-game/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudWktcHJvZ3Jlc3MgewogICAgLy9vcGFjaXR5OiAwOwogICAgJi0tYWN0aXZlIHsKICAgICAgICBvcGFjaXR5OiAxOwogICAgfQp9Ci5wcm9ncmVzcy1iYXIgewogICAgaGVpZ2h0OiAzcHg7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItLXBvc2l0aXZlOwp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ui/progress","sourcesContent":["<template>\n    <div class=\"ui-progress\" :class=\"{'ui-progress--active': isProgressActive}\">\n        <div class=\"ui-progress__box\">\n            <div ref=\"progress\" class=\"progress-bar progress-bar-striped\" role=\"progressbar\" style=\"width: 0\"></div>\n        </div>\n    </div>\n</template>\n\n<script>\nexport default {\n    props: {\n        isProgressActive: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data() {\n        return {\n            current_progress: 0,\n            step: 0.2,\n            interval: null\n        }\n    },\n    methods: {\n        start(){\n            this.reset()\n            this.interval = setInterval(() => {\n                this.current_progress += this.step;\n                this.progress = Math.round(Math.atan(this.current_progress) / (Math.PI / 2) * 100 * 1000) / 1000\n                this.$refs.progress.style.width = `${this.progress}%`\n                if (this.progress >= 100){\n                    clearInterval(this.interval);\n                } else if (this.progress >= 70) {\n                    this.step = 0.1\n                }\n            }, 100);\n        },\n        stop(){\n            this.$refs.progress.style.width = `100%`\n            clearInterval(this.interval);\n        },\n        reset() {\n            this.$refs.progress.style.width = `0%`\n            clearInterval(this.interval);\n        }\n    },\n    mounted() {\n        setTimeout(() => {\n            this.start()\n          }, 300);\n    },\n    beforeDestroy() {\n        this.reset()\n    }\n}\n\n</script>\n\n<style scoped lang=\"scss\">\n.ui-progress {\n    //opacity: 0;\n    &--active {\n        opacity: 1;\n    }\n}\n.progress-bar {\n    height: 3px;\n    background-color: $color--positive;\n}\n</style>\n"]}]}